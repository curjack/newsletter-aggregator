services:
  - type: web
    name: newsletter-aggregator
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: |
      python -c "
      import time
      import os
      from sqlalchemy import create_engine
      from sqlalchemy.exc import OperationalError
      
      # Wait for database to be ready
      db_url = os.environ.get('DATABASE_URL').replace('postgres://', 'postgresql://')
      for i in range(5):
          try:
              engine = create_engine(db_url)
              engine.connect()
              break
          except OperationalError:
              print(f'Database connection attempt {i+1} failed, retrying...')
              time.sleep(5)
      " && \
      flask db init || true && \
      flask db stamp head || true && \
      flask db migrate -m "Initial migration" || true && \
      flask db upgrade && \
      gunicorn app:app
    envVars:
      - key: PYTHON_VERSION
        value: 3.12.0
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: app.py
      - key: DATABASE_URL
        fromDatabase:
          name: newsletter-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: PASSWORD_SALT
        generateValue: true
      - key: MAILGUN_DOMAIN
        sync: false
      - key: MAILGUN_API_KEY
        sync: false
      - key: MAILGUN_WEBHOOK_SIGNING_KEY
        sync: false
      - key: MAILGUN_BASE_URL
        value: https://api.mailgun.net/v3
      - key: NEWSLETTER_RECEIVING_EMAIL
        sync: false
      - key: DIGEST_FROM_EMAIL
        sync: false
      - key: DIGEST_FROM_NAME
        value: Newsletter Digest

databases:
  - name: newsletter-db
    databaseName: newsletter
    plan: free
    ipAllowList: [] # allow all 